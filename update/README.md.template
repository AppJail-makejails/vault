# Vault

Vault is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, certificates, and more. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log.

developer.hashicorp.com/vault

<img src="https://www.hashicorp.com/_next/static/media/vault_on-dark.97792f64.svg" alt="vault logo" width="60%" height="auto">

## How to use this Makejail

```sh
appjail makejail \
    -j vault \
    -f gh+AppJail-makejails/vault \
    -o virtualnet=":<random> default" \
    -o nat \
    -o limits="memorylocked:deny=1g" \
    -o template="$PWD/template.conf"
appjail start vault
```

**template.conf**:

```
exec.start: "/bin/sh /etc/rc"
exec.stop: "/bin/sh /etc/rc.shutdown jail"
mount.devfs
persist
allow.mlock
```

**Note**: By default, mlock support is enabled, but it may not work on your system unless you set `vm.old_mlock` to `1`. If you do not want to do this, set `vault_disable_mlock` to `1`. See also: https://github.com/hashicorp/vault/issues/6340#issuecomment-472169916

### Arguments (stage: build)

* `vault_config` (default: `files/vault.hcl`): Configuration file.
* `vault_disable_mlock` (default: `0`): Enable or disable mlock support. However, this depends on the configuration file. See [files/vault.hcl](files/vault.hcl) for details.
* `vault_tag` (default: `%%TAG1%%`): see [#tags](#tags).
* `vault_ajspec` (default: `gh+AppJail-makejails/vault`): Entry point where the `appjail-ajspec(5)` file is located.

### Check current status

The custom stage `vault_status` can be used to run `top(1)` to check the status of Vault.

```sh
appjail run -s vault_status vault
```

### Log

To view the log generated by the web application, run the custom stage `vault_log`.

```sh
appjail run -s vault_log vault
```

### Volumes

| Name       | Owner | Group | Perm | Type | Mountpoint |
| ---------- | ----- | ----- | ---- | ---- | ---------- |
| vault-data | 471   | 471   |  -   |  -   | /data      |

## Tags

| Tag        | Arch     | Version            | Type   |
| ---------- | -------- | ------------------ | ------ |
| `%%TAG1%%` | `amd64`  | `%%TAG1%%-RELEASE` | `thin` |
| `%%TAG2%%` | `amd64`  | `%%TAG2%%-RELEASE` | `thin` |
